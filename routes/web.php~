<?php


use App\Http\Controllers\Auth\GitHubController;
use App\Http\Controllers\Auth\GoogleController;
use App\Http\Controllers\StripeWebhookController;
use App\Livewire\Orders\ShowOrder;
use App\Livewire\Plans\ShowPlans;
use App\Livewire\Products\CreateProduct;
use App\Livewire\Products\ShowProducts;
use App\Livewire\Subscriptions;
use App\Livewire\Subscriptions\ShowSubscriptions;
use App\Livewire\Users\CreateUser;
use App\Livewire\Users\EditUser;
use App\Livewire\Users\ShowUsers;
use App\Models\Order;
use App\Models\Plan;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Route;
use Livewire\Volt\Volt;
use Stripe\Stripe;

Route::get('/auth/redirect/google', [GoogleController::class, 'redirect'])->name('google.redirect');
Route::get('/auth/callback/google', [GoogleController::class, 'callback'])->name('google.callback');

Route::get('/auth/redirect/github', [GitHubController::class, 'redirect'])->name('github.redirect');
Route::get('/auth/callback/github', [GitHubController::class, 'callback'])->name('github.callback');

Route::get('/pricing', ShowPlans::class)->name('pricing');



Route::get('/', function () {
    return view('welcome');
})->name('home');

Route::view('dashboard', 'dashboard')
    ->middleware(['auth', 'verified'])
    ->name('dashboard');

// ✅ Groupe avec authentification obligatoire
Route::middleware(['auth'])->group(function () {
    Route::redirect('settings', 'settings/profile');
    Volt::route('settings/profile', 'settings.profile')->name('settings.profile');
    Volt::route('settings/password', 'settings.password')->name('settings.password');
    Volt::route('settings/appearance', 'settings.appearance')->name('settings.appearance');

    Route::get('/users', ShowUsers::class)->name('users.index');
    Route::get('/users/create', CreateUser::class)->name('users.create');
    Route::get('/users/{user}/edit', EditUser::class)->name('users.edit');

    // Role routes
    Route::get('/roles', \App\Livewire\Roles\ShowRoles::class)->name('roles.index');
    Route::get('/roles/create', \App\Livewire\Roles\CreateRole::class)->name('roles.create');
    Route::get('/roles/{role}/edit', \App\Livewire\Roles\EditRole::class)->name('roles.edit');

    Route::get('/checkout/{plan}', function (Plan $plan) {
        $user = Auth::user();

        return $user->newSubscription('default', $plan->stripe_price_id)
            ->checkout([
                'success_url' => route('checkout.success', ['plan' => $plan->id]) . '?session_id={CHECKOUT_SESSION_ID}',
                'cancel_url' => route('pricing'),
            ]);
    })->name('checkout');

    Route::get('/checkout/success/{plan}', function (Plan $plan) {
        Stripe::setApiKey(config('services.stripe.secret'));
        $user = Auth::user();
        $session = \Stripe\Checkout\Session::retrieve(request('session_id'));
        $stripe_transaction_id = $session->payment_intent ?? $session->subscription ?? 'onbekend';
        $order = Order::where('stripe_transaction_id', $stripe_transaction_id)->first();
        if (! $order) {
            Order::create([
                'user_id' => $user->id,
                'plan_id' => $plan->id,
                'stripe_transaction_id' => $stripe_transaction_id,
                'amount' => $plan->price,
                'status' => 'paid',
            ]);
        }
        return redirect()->route('dashboard')->with('success', 'Je bent nu geabonneerd op het ' . $plan->name . ' plan.');
    })->name('checkout.success');


    Route::get('/subscriptions', ShowSubscriptions::class)->name('subscriptions');
    Route::get('/products', ShowProducts::class)->name('products.index');
    Route::get('/products/create', CreateProduct::class)->name('products.create');

});

// ✅ Groupe protégé par abonnement actif (check.plan)
Route::middleware(['auth', 'check.plan'])->group(function () {
    Route::get('/orders', \App\Livewire\Orders\ShowOrders::class)->name('orders.index');
    Route::get('/orders/{order}', ShowOrder::class)->name('orders.show');
    Route::get('/orders/{order}/download', function (\App\Models\Order $order) {
        $pdf = \Barryvdh\DomPDF\Facade\Pdf::loadView('livewire.orders.orderPDF', [
            'order' => $order,
            'user' => Auth::user(),
        ]);

        return $pdf->download("order-{$order->transaction_id}.pdf");
    })->name('orders.download');
});



Route::post('/stripe/webhook', [StripeWebhookController::class, 'handleWebhook']);

require __DIR__.'/auth.php';
